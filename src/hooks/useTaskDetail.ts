// src/hooks/useTaskDetail.ts - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ä–∞–±–æ—á–µ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π

import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import TelegramAPI from '@/lib/telegram';
import { openAIService } from '@/lib/openai';

interface CheckResult {
  score: number;
  feedback: string;
  suggestions?: string[];
}

export const useTaskDetail = () => {
  const navigate = useNavigate();
  const [userAnswer, setUserAnswer] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [checkResult, setCheckResult] = useState<CheckResult | null>(null);
  const [telegramAPI, setTelegramAPI] = useState<TelegramAPI | null>(null);

  useEffect(() => {
    const tg = TelegramAPI.getInstance();
    setTelegramAPI(tg);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram
    const debugInfo = tg.getDebugInfo();
    console.log('üîç Telegram Debug Info:', debugInfo);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram WebApp
    if (window.Telegram?.WebApp) {
      console.log('üì± Telegram WebApp Data:', {
        initData: window.Telegram.WebApp.initData,
        initDataUnsafe: window.Telegram.WebApp.initDataUnsafe,
        version: window.Telegram.WebApp.version,
        platform: window.Telegram.WebApp.platform
      });
    }

    tg.showBackButton(() => {
      navigate('/tasks/data-analysis');
    });

    return () => {
      tg.hideBackButton();
      tg.hideMainButton();
    };
  }, [navigate]);

  const handleDownloadTable = () => {
    if (!telegramAPI) {
      console.error('‚ùå TelegramAPI –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      alert('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram API');
      return;
    }

    // –î–ª—è WebAppInfo –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥
    if (telegramAPI.isInTelegram() && window.Telegram?.WebApp?.initDataUnsafe?.query_id) {
      // –ï—Å–ª–∏ –µ—Å—Ç—å query_id, –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å answerWebAppQuery
      const queryId = window.Telegram.WebApp.initDataUnsafe.query_id;
      console.log('üì§ –ò—Å–ø–æ–ª—å–∑—É–µ–º query_id –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', queryId);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      telegramAPI.showAlert('–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–∞—Ç —Å –±–æ—Ç–æ–º.');
      
      // –î–ª—è inline button –º–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å WebApp –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
      // window.Telegram.WebApp.close();
    } else {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º deep link –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–º–∞–Ω–¥—ã
      const botUsername = 'YOUR_BOT_USERNAME'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
      const command = 'download_table_cohort';
      const deepLink = `https://t.me/${botUsername}?start=${command}`;
      
      telegramAPI.showAlert('–û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã');
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º deep link
      window.open(deepLink, '_blank');
    }
  };

  const handleOpenCourse = () => {
    if (!telegramAPI) {
      console.error('‚ùå TelegramAPI –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      alert('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram API');
      return;
    }

    // –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º deep link
    const botUsername = 'YOUR_BOT_USERNAME'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
    const command = 'open_course_sql';
    const deepLink = `https://t.me/${botUsername}?start=${command}`;
    
    telegramAPI.showAlert('–û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫—É—Ä—Å—É');
    window.open(deepLink, '_blank');
  };

  const handleSubmitHomework = async (documentId?: string) => {
    if (!telegramAPI) {
      console.error('‚ùå TelegramAPI –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      alert('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram API');
      return;
    }

    if (!userAnswer.trim()) {
      await telegramAPI.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π');
      return;
    }

    setIsSubmitting(true);

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ query_id –¥–ª—è inline mode
      if (window.Telegram?.WebApp?.initDataUnsafe?.query_id) {
        const queryId = window.Telegram.WebApp.initDataUnsafe.query_id;
        
        // –î–ª—è inline button WebApp –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å answerWebAppQuery
        // –ù–æ —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ Bot API
        console.log('üì§ Query ID –¥–æ—Å—Ç—É–ø–µ–Ω:', queryId);
        
        await telegramAPI.showAlert(
          '–ó–∞–¥–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—è–≤–∏—Ç—Å—è –≤ —á–∞—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.'
        );
        
        // –ú–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å WebApp –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        setTimeout(() => {
          window.Telegram?.WebApp?.close();
        }, 2000);
        
      } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º deep link —Å –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        const botUsername = 'YOUR_BOT_USERNAME'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
        const taskId = 'cohort-analysis-sql';
        
        // –ö–æ–¥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —á–µ—Ä–µ–∑ URL
        const encodedAnswer = encodeURIComponent(userAnswer.substring(0, 100)); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        const command = `hw_${taskId}_${encodedAnswer}`;
        const deepLink = `https://t.me/${botUsername}?start=${command}`;
        
        await telegramAPI.showAlert(
          '–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–¥–∞–Ω–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º'
        );
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º deep link
        window.open(deepLink, '_blank');
      }

      // –õ–æ–∫–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ OpenAI (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
      try {
        // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω documentId, –∏—Å–ø–æ–ª—å–∑—É–µ–º chat-assistant —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        if (documentId) {
          const { supabase } = await import('@/integrations/supabase/client');
          const { data, error } = await supabase.functions.invoke('chat-assistant', {
            body: {
              message: userAnswer,
              taskContext: '–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ executive summary',
              documentId: documentId
            }
          });

          if (data && !error) {
            setCheckResult({
              score: 85, // –ü—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
              feedback: data.message,
              suggestions: ['–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã', '–î–æ–±–∞–≤—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ']
            });
          }
        } else {
          // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ OpenAI service
          const result = await openAIService.checkHomework({
            taskTitle: '–ö–æ–≥–æ—Ä—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ SQL',
            userAnswer: userAnswer,
            timestamp: new Date().toISOString()
          });

          if (result.success) {
            setCheckResult({
              score: result.score,
              feedback: result.feedback,
              suggestions: result.suggestions
            });
          }
        }
      } catch (error) {
        console.log('‚ö†Ô∏è OpenAI –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', error);
      }

    } catch (error) {
      console.error('‚ùå Error submitting homework:', error);
      await telegramAPI.showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsSubmitting(false);
    }
  };

  return {
    userAnswer,
    setUserAnswer,
    isSubmitting,
    checkResult,
    handleDownloadTable,
    handleOpenCourse,
    handleSubmitHomework,
    navigate
  };
};
